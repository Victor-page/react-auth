{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","utils/getEndPoint.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedEpirationTime","remainingTime","removeItem","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","getEndpoint","endPointSpecifier","setAccountInfoEndpoint","getEndPoint","ProfileForm","history","useHistory","newPasswordInputRef","useRef","onSubmit","event","preventDefault","enteredNewPassword","current","requestBodyPayload","JSON","stringify","idToken","password","returnSecureToken","fetch","method","body","headers","then","response","json","data","replace","catch","form","control","htmlFor","type","id","ref","minLength","required","action","UserProfile","profile","alertErrorMessage","error","alert","message","handleError","errorMessage","Error","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","handleResponse","ok","auth","endPoint","enteredEmail","enteredPassword","configuration","email","Number","expiresIn","toISOString","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c5e5408.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__Bx8BJ\",\"control\":\"ProfileForm_control__1d3GM\",\"action\":\"ProfileForm_action__1NHkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2AkwH\",\"logo\":\"MainNavigation_logo__360Vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__-09zK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__2islP\"};","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: '',\r\n  isLoggedIn: false,\r\n  login(token) {},\r\n  logout() {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n  const remainingTime = adjExpirationTime - currentTime;\r\n\r\n  return remainingTime;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem('token');\r\n  const storedEpirationTime = localStorage.getItem('expirationTime');\r\n\r\n  const remainingTime = calculateRemainingTime(storedEpirationTime);\r\n\r\n  const oneMinute = 60000;\r\n  if (remainingTime <= oneMinute) {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n    return null;\r\n  }\r\n\r\n  return { token: storedToken, remainingTime };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n\r\n    logoutTimer && clearTimeout(logoutTimer);\r\n  }, []);\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expirationTime', expirationTime);\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      console.log(tokenData.remainingTime);\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.remainingTime);\r\n    }\r\n  }, [tokenData, logoutHandler]);\r\n\r\n  const contextValue = {\r\n    token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    authCtx.logout();\n  };\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {isLoggedIn ? (\n            <Fragment>\n              <li>\n                <Link to=\"/profile\">Profile</Link>\n              </li>\n              <li>\n                <button onClick={logoutHandler}>Logout</button>\n              </li>\n            </Fragment>\n          ) : (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","const url = 'https://identitytoolkit.googleapis.com/v1/accounts:';\r\n\r\nconst parameters = '?key=AIzaSyDueCdt9k7KiGNsVEgE2hBJO7yFgTopItQ';\r\n\r\nconst getEndpoint = (endPointSpecifier) =>\r\n  `${url}${endPointSpecifier}${parameters}`;\r\n\r\nexport default getEndpoint;\r\n","import { useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport getEndPoint from '../../utils/getEndPoint';\nimport AuthContext from '../../store/auth-context';\n\nimport classes from './ProfileForm.module.css';\n\nconst setAccountInfoEndpoint = getEndPoint('update');\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    const requestBodyPayload = JSON.stringify({\n      idToken: authCtx.token,\n      password: enteredNewPassword,\n      returnSecureToken: false,\n    });\n\n    const configuration = {\n      method: 'POST',\n      body: requestBodyPayload,\n      headers: { 'Content-Type': 'application/json' },\n    };\n\n    fetch(setAccountInfoEndpoint, configuration)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        history.replace('/');\n      })\n      .catch(console.log);\n  };\n\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input\n          type=\"password\"\n          id=\"new-password\"\n          ref={newPasswordInputRef}\n          minLength=\"6\"\n          required\n        />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom';\n\nimport getEndpoint from '../../utils/getEndPoint';\n\nimport classes from './AuthForm.module.css';\n\nconst alertErrorMessage = (error) => alert(error.message);\n\nconst handleError = (data) => {\n  let errorMessage = 'Authentication failed!';\n  if (data && data.error && data.error.message) {\n    errorMessage = data.error.message;\n  }\n\n  throw new Error(errorMessage);\n};\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const handleResponse = (response) => {\n    setIsLoading(false);\n    if (response.ok) {\n      return response.json();\n    } else {\n      return response.json().then(handleError);\n    }\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    const requestBodyPayload = JSON.stringify({\n      email: enteredEmail,\n      password: enteredPassword,\n      returnSecureToken: true,\n    });\n\n    const configuration = {\n      method: 'POST',\n      body: requestBodyPayload,\n      headers: { 'Content-Type': 'application/json' },\n    };\n\n    setIsLoading(true);\n    let endPoint;\n    if (isLogin) {\n      endPoint = getEndpoint('signInWithPassword');\n    } else {\n      endPoint = getEndpoint('signUp');\n    }\n    fetch(endPoint, configuration)\n      .then(handleResponse)\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + Number(data.expiresIn) * 1000\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace('/');\n      })\n      .catch(alertErrorMessage);\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n            minLength=\"6\"\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin\n              ? 'Create a new account'\n              : 'Login with an existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n        <Route path=\"/profile\">\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './store/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1YsfE\",\"control\":\"AuthForm_control__2Yp3T\",\"actions\":\"AuthForm_actions__24bal\",\"toggle\":\"AuthForm_toggle__tYAHe\"};"],"sourceRoot":""}